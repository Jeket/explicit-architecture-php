type Post {
    id: String!
    title: String!
    slug: String!
    summary: String!
    content: String!
    publishedAt: AtomDateTime!

    comments(
        after: String
        first: Int
        before: String
        last: Int
    ): PostCommentsConnection!

    tags(
        after: String
        first: Int
        before: String
        last: Int
    ): PostTagsConnection!

    # It might look like overkill to have a connection, instead of the `User` type, because there is only one author,
    # however, this is future proof: If we want to add a feature allowing to have several authors for the same post,
    # the only change will be the amount of authors returned, everything else will stay the same, so there will be
    # no BC breaks, which would happen if we would use the `User` type directly.
    authors: PostAuthorsConnection!
}

type PostCommentsConnection {
    pageInfo: PageInfo!
    count: Int!
    edges: [PostCommentsEdge!]!
}

type PostCommentsEdge {
    cursor: String!
    node: Comment!
}

type PostTagsConnection {
    pageInfo: PageInfo!
    count: Int!
    edges: [PostTagsEdge!]!
}

type PostTagsEdge {
    cursor: String!
    node: Tag!
}

type PostAuthorsConnection {
    pageInfo: PageInfo!
    count: Int!
    edges: [PostAuthorsEdge!]!
}

type PostAuthorsEdge {
    cursor: String!
    node: User!
}

